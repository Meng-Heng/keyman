
locate_programFilesX86() {
  # ProgramFilesx86="$(cygpath -u "`printenv 'ProgramFiles(x86)'`")"
  # ProgramFilesx86="$(printenv 'ProgramFiles(x86)')"
  ProgramFilesx86="$(cygpath -w -F 42)"  # 42 = CSIDL_PROGRAM_FILESX86
}

# 1. Find vsdevcmd.bat

locate_vsdevcmd() {
  local vswhere="$(cygpath -u "$ProgramFilesx86\\Microsoft Visual Studio\\Installer\\vswhere.exe")"
  VSInstallationPath="$(cygpath -u "$("$vswhere" -latest -property installationPath)")"
  VSDevCmd_Path="$VSInstallationPath/Common7/Tools/VsDevCmd.bat"
}

locate_rsvars() {
  #
  # Delphi Compiler Configuration - Delphi 10.3.2
  #
  DELPHI_VERSION=20.0
  DCC32PATH="$(cygpath -u "$ProgramFilesx86\\Embarcadero\\Studio\\$DELPHI_VERSION\\bin")"
  RSVars_path="$DCC32PATH/rsvars.bat"
}


build_vs_environment() {
  echo "@CALL \"$(cygpath -w "$VSDevCmd_Path")\" > nul" > devenv.bat
  echo @SET >> devenv.bat

  cmd //c "devenv.bat" > devenv.tmp
  cmd //c "set" > env.tmp
  diff devenv.tmp env.tmp --suppress-common-lines | grep -e '^<' | cut -c 3- - > newenv.tmp

  echo "# VC++ development environment constructed from vsdevcmd.bat; do not modify" > "$KEYMAN_ROOT/resources/build/win/visualstudio_environment_generated.inc.sh"

  while read -r line; do
    IFS==; lineDelim=($line); unset IFS
    local var="${lineDelim[0]}"
    local value="${lineDelim[1]}"
    if [[ "$var" == PATH ]]; then
      # We'll append the new path; TODO: remove dups?
      value="$PATH:$value"
    fi

    echo "export ${lineDelim[0]}=\"$(cygpath -up "${lineDelim[1]}")\"" >> "$KEYMAN_ROOT/resources/build/win/visualstudio_environment_generated.inc.sh"
  done < newenv.tmp

  rm -f newenv.tmp devenv.tmp env.tmp devenv.bat
}

build_delphi_environment() {
  echo "@CALL \"$(cygpath -w "$RSVars_path")\" > nul" > devenv.bat
  echo @SET >> devenv.bat

  cmd //c "devenv.bat" > devenv.tmp
  cmd //c "set" > env.tmp
  diff devenv.tmp env.tmp --suppress-common-lines | grep -e '^<' | cut -c 3- - > newenv.tmp

  # Temporarily build DELPHIINCLUDES from PathDefines.mak; TODO: rewrite this
  grep DELPHIINCLUDES "$KEYMAN_ROOT/windows/src/PathDefines.mak" >> newenv.tmp

  echo "# Delphi development environment constructed from rsvars.bat; do not modify" > "$KEYMAN_ROOT/resources/build/win/delphi_environment_generated.inc.sh"

  while read -r line; do
    IFS==; lineDelim=($line); unset IFS
    local var="${lineDelim[0]}"
    local value="${lineDelim[1]}"
    if [[ "$var" == PATH ]]; then
      # We'll append the new path; TODO: remove dups?
      value="$PATH:$value"
    fi

    echo "export ${lineDelim[0]}=\"$(cygpath -up "${lineDelim[1]}")\"" >> "$KEYMAN_ROOT/resources/build/win/delphi_environment_generated.inc.sh"
  done < newenv.tmp

  rm -f newenv.tmp devenv.tmp env.tmp devenv.bat
}

#build_delphi_include_path() {
  # Temporarily grab this from windows/src/PathDefines.mak
  #local DelphiIncludes="$(cygpath -up "$(grep DELPHIINCLUDES "$KEYMAN_ROOT/windows/src/PathDefines.mak")")"
  #echo >> delphienv.inc.sh
  #echo "export DELPHIINCLUDES=\"$DelphiIncludes\"" >> delphienv.inc.sh
# This file was generated by DevTools and should not be manually modified.
# DELPHIINCLUDES=c:\Projects\keyman\app\common\windows\delphi\ext\cef4delphi\source;c:\Projects\keyman\app\common\windows\delphi\ext\dcpcrypt;c:\Projects\keyman\app\common\windows\delphi\ext\jwa\Win32API;c:\Projects\keyman\app\developer\src\ext\jedi;c:\Projects\keyman\app\developer\src\ext\jedi\jcl\jcl\source\common;c:\Projects\keyman\app\developer\src\ext\jedi\jcl\jcl\source\include;c:\Projects\keyman\app\developer\src\ext\jedi\jcl\jcl\source\vcl;c:\Projects\keyman\app\developer\src\ext\jedi\jcl\jcl\source\windows;c:\Projects\keyman\app\developer\src\ext\jedi\jvcl\jvcl\common;c:\Projects\keyman\app\developer\src\ext\jedi\jvcl\jvcl\resources;c:\Projects\keyman\app\developer\src\ext\jedi\jvcl\jvcl\run;c:\Projects\keyman\app\developer\src\ext\jedi\packages;c:\Projects\keyman\app\developer\src\ext\mbcolor;c:\Projects\keyman\app\developer\src\ext\scfontcombobox

#}

configure_windows_build_environment() {
  locate_programFilesX86
  locate_vsdevcmd
  build_vs_environment

  locate_rsvars
  build_delphi_environment
}

#build_delphi_include_path

# echo "$VSInstallationPath"

# for /f "usebackq delims=#" %%a in (`"%programfiles(x86)%\Microsoft Visual Studio\Installer\vswhere" -latest -property installationPath`) do (
#   set VsDevCmd_Path=%%a\Common7\Tools\VsDevCmd.bat
# )
